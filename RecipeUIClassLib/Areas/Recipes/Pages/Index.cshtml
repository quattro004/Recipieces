@page
@model RecipeUIClassLib.Areas.Recipes.Models.IndexModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <h3 class="col-10">Recipes</h3>
    <a asp-page="Create" class="col-2 btn btn-outline-primary">New Recipe</a>
</div>
<hr />
@if (!Model.Recipes.Any())
{
    <p class="row">No recipes have been created yet.</p>
}
else
{
    var recipes = Model.Recipes.ToList();
    var closedCardDeck = false;
    
    <div class="row">
        @for (var index = 0; index < recipes.Count(); index++)
        {
            <!-- Only allow 3 cards per row -->
            var addRow = index % 3 == 0;
            var recipe = recipes[index];
            var recipeId = recipe.Id;
            var cardCount = 0;

            if (@addRow)
            {
                closedCardDeck = false;
                if (@cardCount == 3)
                {
                    @Html.Raw("</div>"); // Close the previous card deck before starting a new one
                    cardCount = 0;
                    closedCardDeck = true;
                }
                @Html.Raw("<div class='card-deck'>");
            }
                <div class="card shadow-sm text-white bg-dark mb-3" style="max-width: 18rem;">
                    <svg class="bd-placeholder-img card-img-top" width="100%" height="100%" xmlns="http://www.w3.org/2000/svg"
                        preserveAspectRatio="xMidYMid slice" focusable="false" role="img" aria-label="Placeholder: No Picture">
                        <title>Placeholder</title>
                        <rect width="100%" height="100%" fill="#55595c"/>
                        <text x="30%" y="50%" fill="#eceeef" dy=".3em">No Picture</text>
                    </svg>
                    <!-- <img src="images/cookie.jpeg" class="card-img-top" alt="@recipe.Title" />  -->
                    <div class="card-body">
                        <h5 class="card-title">@recipe.Title</h5>
                        <small class="card-text">@recipe.Description</small>
                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-muted">@recipe.Yield</small>
                        </div>
                    </div>
                    <div class="card-footer">
                        <small class="text-muted">
                            <div class="btn-group">
                                <a asp-page="Details" asp-route-id="@recipeId" class="btn btn-sm btn-outline-secondary">View</a>
                                <a asp-page="Edit" asp-route-id="@recipeId" class="btn btn-sm btn-outline-secondary">Edit</a>
                                <a asp-page="Delete" asp-route-id="@recipeId" class="btn btn-sm btn-outline-secondary">Remove</a>
                            </div>
                        </small>
                    </div>
                </div>
                cardCount++;
        }
        @if (!@closedCardDeck) // Check to see if the last card deck was closed, can happen when there are less than 3 cards in the final deck
        {
            Html.Raw("</div>"); 
        }
    </div>
}